Instructions:
1. ant to build (build.xml is untouched)
2. use run.sh to run:
    ./run.sh "./data/first.html" "./data/second.csv" 

I was developing on the command line on a Windows machine so I changed 
-classpath to use semicolon(;) separators. Change to : if needed.

Assumptions:

1. Columns will be joined on columns with the same name
    e.g. the join will not perform a rename of Name into Name1 and Name2 

2. When sorting, ID is to be compared as an Integer, but if for some reason 
    one of the IDs is not a valid Integer it will do the comparison with String::compareTo()

3. Data in UTF-8 if not specified

4. Environment has Java 8


Decisions:
1. Input parser is implemented as an abstract class BaseInputParser,
    inherited by HTMLInputParser and CSVInputParser for the two input types.
    In retrospect this could have been an interface instead as I did not use any
    member variables like I was planning to.
    Output parser is implemented the same way, they can be extended for other file types.

2. Table is a class, with a List<String> to represent column names and List<List<String>> to represent rows.
    I did this for ease of implementation of the join() method. Given more careful planning
    I would have made a Row class that implements Comparable<Row> for sorting, in case there
    are future classes such as a Grid that needs to use rows as well. I used a 2D array
    instead of HashMap with ID as key to allow for multiple columns as the primary key

